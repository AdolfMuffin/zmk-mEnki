/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include <dt-bindings/zmk/ext_power.h>
 
#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <220>; };
&mt { quick_tap_ms = <220>; };

/ {
    macros {
        numdot: numdot {
            label = "ZM_numdot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>    
                , <&macro_tap     &kp KP_N4 &kp KP_N6>    
                , <&macro_release &kp LALT>
                ;
        };
        grtsgn: grtsgn {
            label = "ZM_grtsgn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>    
                , <&macro_tap     &kp KP_N6 &kp KP_N2>    
                , <&macro_release &kp LALT>
                ;
        };
    };
};
/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
            bindings = <
&mt LEFT_ALT RBKT      &kp Q  &kp W  &kp E    &kp R            &kp T        &kp Y               &kp U         &kp I         &kp O    &kp P     &kp LEFT_BRACKET
&mt LEFT_SHIFT GRAVE   &kp A  &kp S  &kp D    &kp F            &kp G        &kp H               &kp J         &kp K         &kp L    &kp SEMI  &mt LEFT_SHIFT SQT
&mt LEFT_CONTROL BSLH  &kp Z  &kp X  &kp C    &kp V            &kp B        &kp N               &kp M         &kp COMMA     &kp DOT  &kp FSLH  &kp MINUS
                                     &kp TAB  &lt 1 BACKSPACE  &kp SPACE    &mt LEFT_WIN ENTER  &lt 2 ESCAPE  &lt 1 DELETE
            >;
                };
                lower_layer {
                        bindings = <
&kp LEFT_ALT      &kp KP_DOT    &kp N7  &kp N8  &kp N9  &kp PLUS     &kp PG_UP        &kp HOME        &kp UP_ARROW    &kp END          &kp C_VOLUME_UP  &none
&kp LEFT_SHIFT    &kp KP_COMMA  &kp N4  &kp N5  &kp N6  &kp MINUS    &kp PAGE_DOWN    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp C_MUTE       &none
&kp LEFT_CONTROL  &kp N0        &kp N1  &kp N2  &kp N3  &kp EQUAL    &kp PRINTSCREEN  &kp C_PREVIOUS  &kp C_PLAY      &kp C_NEXT       &kp C_VOL_DN     &none
                                        &trans  &trans  &trans       &kp INSERT       &mo 3           &trans
            >;
                };
                raise_layer {
                        bindings = <
&kp LEFT_ALT      &kp F1  &kp F2  &kp F3  &kp F4   &kp F5        &kp EXCLAMATION  &kp AT_SIGN    &kp HASH      &kp DOLLAR            &kp PERCENT            &none
&kp LEFT_SHIFT    &kp F6  &kp F7  &kp F8  &kp F9   &kp F10       &kp CARET        &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&kp LEFT_CONTROL  &none   &none   &none   &kp F11  &kp F12       &kp EQUAL        &kp KP_PLUS    &kp KP_MINUS  &kp UNDER             &none                  &none
                                  &trans  &mo 3    &kp INSERT    &trans           &trans         &trans
            >; 
                };
                                adjust_layer {
                        bindings = <
&bootloader        &none         &none         &none         &none  &none     &none   &none  &none         &none         &none         &bootloader
&bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &none     &none   &none  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&ext_power EP_OFF  &kp KP_NUM    &none         &none         &none  &none     &none   &none  &none         &none         &none         &ext_power EP_OFF
                                               &trans        &none  &trans    &trans  &none  &trans
                        >;
                };
        };
};
